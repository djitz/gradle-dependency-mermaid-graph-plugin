/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.djitz;

import org.gradle.api.Project;
import org.gradle.api.Plugin;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 * A simple plugin.
 */
public class GradleDependencyMermaidGraphPlugin implements Plugin<Project> {
    public void apply(Project project) {
        // Register a task
        project.getTasks().register("drawDependenciesGraph", task -> {
            task.doLast(s -> {
                StringBuffer sb = new StringBuffer();
                String newLine = System.lineSeparator();
                sb.append("```mermaid ").append(newLine);
                sb.append("graph TD; ").append(newLine);

                project.getConfigurations().forEach( config -> {
                    if("implementation".equals(config.getName())) {
                        config.getDependencies().forEach(dependency -> {
                            sb.append("   ").append(project.getName()).append("-->").append(dependency.getName()).append(";")
                                .append(newLine);
                        });
                    }
                });

                sb.append("```");

                writeToFile(sb);
            });
        });
    }

    private void writeToFile(StringBuffer sb) {
        Path path = Paths.get("gradle-dependency-diagram.mmd");
        byte[] strToBytes = sb.toString().getBytes(StandardCharsets.UTF_8);

        try {
            if(!Files.exists(path, LinkOption.NOFOLLOW_LINKS)) {
                Files.createFile(path);
            }
            Files.write(path, strToBytes);
        } catch (IOException e){
            e.printStackTrace();
        }
    }
}
